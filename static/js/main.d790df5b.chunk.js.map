{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","api/users.js","components/UserSelect/UserSelect.jsx","App.jsx","index.js"],"names":["BASE_URL","getUserPosts","fetch","then","response","json","PostsList","person","selectedPostId","postId","useState","posts","setPosts","buttonStatus","setButtonStatus","id","name","useEffect","result","data","filter","post","userId","handleClick","postID","choosen","className","map","key","title","type","onClick","event","target","innerText","defaultProps","PropTypes","shape","isRequired","NewCommentForm","commentUpdate","setName","email","setEmail","setTitle","onSubmit","preventDefault","placeholder","required","value","onChange","PostDetails","comments","deleteComment","loadComments","isChoosen","hidden","setHidden","body","url","options","method","JSON","stringify","addComment","length","comment","UserSelect","select","users","setUsers","user","i","arr","address","findIndex","item","App","setPerson","setPostId","setPost","setIsChoosen","setComments","getPostComments","getPostDetails","commentId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d790df5b.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = () => fetch(`${BASE_URL}/posts`)\n  .then(response => response.json());\n\nexport const getPostDetails = postId => fetch(`${BASE_URL}/posts/${postId}`)\n  .then(response => response.json());\n\nexport const getPostComments = postId => fetch(`${BASE_URL}/comments`)\n  .then(response => response.json())\n  .then(result => result.data.filter(comment => comment.postId === postId));\n\nexport const deleteComment = (commentId) => {\n  const url = `${BASE_URL}/comments/${commentId}`;\n  const options = {\n    method: 'DELETE',\n  };\n\n  return fetch(url, options)\n    .then(response => response.json());\n};\n\nexport const addComment = (postId, name, email, body) => {\n  const url = `${BASE_URL}/comments/`;\n  const options = {\n    method: 'POST',\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  };\n\n  return fetch(url, options)\n    .then(response => response.json());\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getUserPosts } from '../../api/posts';\nimport './PostsList.scss';\n\nexport const PostsList = ({ person, selectedPostId, postId }) => {\n  const [posts, setPosts] = useState([]);\n  const [buttonStatus, setButtonStatus] = useState(true);\n  const { id, name } = person;\n\n  useEffect(() => {\n    if (name && name !== 'All users') {\n      getUserPosts()\n        .then(result => setPosts(result.data\n          .filter(post => post.userId === id)));\n    } else {\n      getUserPosts()\n        .then(result => setPosts(result.data));\n    }\n  }, [name, id]);\n\n  const handleClick = (postID, choosen) => {\n    selectedPostId(postID, choosen);\n    setButtonStatus(choosen)\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]:\n                {' '}\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={(event) => {\n                debugger;\n                event.target.innerText === 'Open'\n                  ? handleClick(post.id, true)\n                  : handleClick(post.id, false);\n                ;\n              }}\n            >\n              {buttonStatus && post.id === postId ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  person: PropTypes.shape({\n    name: PropTypes.string,\n    id: PropTypes.number,\n  }).isRequired,\n  selectedPostId: PropTypes.func.isRequired,\n  postId: PropTypes.number,\n};\n\nPostsList.defaultProps = {\n  person: PropTypes.shape({\n    name: '',\n  }).isRequired,\n  postId: null,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, commentUpdate }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [title, setTitle] = useState('');\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    commentUpdate(postId, name, email, title);\n    setName('');\n    setEmail('');\n    setTitle('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleClick}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          required\n          value={name}\n          onChange={({target}) => setName(target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          required\n          value={email}\n          onChange={({target}) => setEmail(target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          required\n          value={title}\n          onChange={({target}) => setTitle(target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  commentUpdate: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { addComment } from '../../api/posts';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({\n  post,\n  comments,\n  deleteComment,\n  loadComments,\n  isChoosen,\n}) => {\n  const [hidden, setHidden] = useState(true);\n\n  const commentUpdate = (postId, name, email, body) => addComment(postId, name, email, body);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      {isChoosen && post && (\n        <>\n          <section className=\"PostDetails__post\">\n            <p>{post.title}</p>\n          </section>\n\n          <section className=\"PostDetails__comments\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => setHidden(!hidden)}\n            >\n              {hidden\n                ? `Hidden ${comments.length} `\n                  + `comment${comments.length !== 1 ? 's' : ''}`\n                : `Hide ${comments.length} `\n                  + `comment${comments.length !== 1 ? 's' : ''}`}\n            </button>\n\n            {!hidden && (\n              <ul className=\"PostDetails__list\">\n                {comments.map(comment => (\n                  <li className=\"PostDetails__list-item\" key={comment.id}>\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => {\n                        deleteComment(comment.id);\n                      }}\n                    >\n                      X\n                    </button>\n                    <p>{comment.body}</p>\n                  </li>\n                ))}\n\n              </ul>\n            )}\n          </section>\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm\n                postId={post.id}\n                commentUpdate={(postId, name, email, body) => {\n                  commentUpdate(postId, name, email, body)\n                    .then(() => loadComments(post.id));\n                }}\n              />\n            </div>\n          </section>\n        </>\n      )}\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }),\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      body: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  deleteComment: PropTypes.func.isRequired,\n  loadComments: PropTypes.func.isRequired,\n  isChoosen: PropTypes.bool.isRequired,\n};\n\nPostDetails.defaultProps = {\n  post: null,\n};\n","import { BASE_URL } from './api';\n\nexport const getUsers = () => fetch(`${BASE_URL}/users`)\n  .then(response => response.json());\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getUsers } from '../../api/users';\n\nexport const UserSelect = ({ select, name }) => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    getUsers()\n      .then(result => setUsers(result.data\n        .filter((user, i, arr) => user.address !== null\n          && i === arr.findIndex(item => user.name === item.name))));\n  }, []);\n\n  return (\n    <label>\n      Select a user: &nbsp;\n\n      <select\n        className=\"App__user-selector\"\n        value={name}\n        onChange={(event) => {\n          const { value } = event.target;\n\n          if (value === 'All users') {\n            select({ name: 'All users' });\n\n            return;\n          }\n\n          const person = users.filter(user => user.name === value)[0];\n\n          select(person);\n        }}\n      >\n        <option value=\"All users\">All users</option>\n        {users.map(user => (\n          <option\n            value={user.name}\n            key={user.id}\n          >\n            {user.name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n};\n\nUserSelect.propTypes = {\n  select: PropTypes.func.isRequired,\n  name: PropTypes.string,\n};\n\nUserSelect.defaultProps = {\n  name: '',\n};\n","import React, { useState } from 'react';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelect } from './components/UserSelect';\nimport { getPostDetails, getPostComments, deleteComment } from './api/posts';\nimport './App.scss';\nimport './styles/general.scss';\n\nconst App = () => {\n  const [person, setPerson] = useState({});\n  const [postId, setPostId] = useState();\n  const [post, setPost] = useState(null);\n  const [isChoosen, setIsChoosen] = useState(false);\n  const [comments, setComments] = useState([]);\n\n  const select = (user) => {\n    setPerson(user);\n  };\n\n  const loadComments = (id) => {\n    getPostComments(id)\n      .then(result => setComments(result));\n  };\n\n  const selectedPostId = (id, buttonStatus) => {\n\n    setIsChoosen(buttonStatus);\n    setPostId(id);\n\n    getPostDetails(id)\n      .then(result => setPost(result.data));\n\n    loadComments(id);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <UserSelect\n          select={select}\n          name={person.name}\n        />\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            person={person}\n            postId={postId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            post={post}\n            comments={comments}\n            deleteComment={commentId => deleteComment(commentId)\n              .then(() => loadComments(postId))\n            }\n            loadComments={loadComments}\n            isChoosen={isChoosen}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}